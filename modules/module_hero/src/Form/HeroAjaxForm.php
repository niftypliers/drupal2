<?php


namespace Drupal\module_hero\Form;


use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\HtmlCommand;
use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;

class HeroAjaxForm extends FormBase
{
  public function getFormId()
  {
    return ('hero_ajax_form');
  }

  public function buildForm(array $form, FormStateInterface $form_state)
  {
    $form['messager'] = [
      '#type' => 'markup',
      '#markup' => '<div class="ajax-message"></div>'
    ];
    $form['text1'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Text 1'),
    ];

    $form['text2'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Text 2'),
    ];

    $form['submit'] = [
      '#type' => 'button',
      '#value' => $this->t('Submit'),
      '#ajax' => [
        'callback' => "::heroAjaxCallback"
      ]
    ];

    return $form;
  }

  public function heroAjaxCallback(array &$form, FormStateInterface $form_state) {
    // AjaxResponse, addCommand, HtmlCommand
    $result = "Form submitted with values: " . $form_state->getValue('text1') . ' and ' . $form_state->getValue('text2');
    $response = new AjaxResponse();
    return $response->addCommand(new HtmlCommand('.ajax-message', $result));
  }

  public function validateForm(array &$form, FormStateInterface $form_state)
  {
    parent::validateForm($form, $form_state); // TODO: Change the autogenerated stub
  }

  public function submitForm(array &$form, FormStateInterface $form_state)
  {
    // TODO: Implement submitForm() method.
  }
}
